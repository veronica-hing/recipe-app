{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","recipeURL","className","style","recipe","container","href","target","card","info","front","src","alt","Math","floor","back","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","exampleRequest","useEffect","getRecipes","a","fetch","res","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","label","url","uri","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAgCeA,EA7BA,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,UAClD,OACI,qBAAKC,UAAaC,IAAMC,OAAxB,SACI,sBAAKF,UAAYC,IAAME,UAAvB,UACI,mBAAGC,KAAQL,EAAWM,OAAS,SAA/B,SAAwC,6BAAKV,MAC7C,qBAAKK,UAAaC,IAAMK,KAAxB,SACI,sBAAKN,UAAaC,IAAMM,KAAxB,UACI,sBAAKP,UAAaC,IAAMO,MAAxB,UACI,qBAAKR,UAAaC,IAAMJ,MAAOY,IAAKZ,EAAOa,IAAM,4BACjD,2CAAcC,KAAKC,MAAMhB,SAE7B,sBAAKI,UAAaC,IAAMY,KAAxB,UACI,6BACKf,EAAYgB,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,mBAAGZ,KAAQL,EAAWM,OAAS,SAA/B,SACI,0CAAaV,EAAb,kCCqCjBsB,EAtDH,WAER,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMgBF,mBAAS,IANzB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASPC,EAAc,0CAAsCF,EAAtC,mBAPL,WAOK,oBANJ,oCAQhBG,qBAAU,WACRC,MACA,CAACJ,IAEH,IAAMI,EAAU,uCAAG,8BAAAC,EAAA,sEACCC,MAAMJ,GADP,cACXK,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGjBZ,EAAWY,EAAKC,MAHC,2CAAH,qDAgBlB,OACE,sBAAKjC,UAAY,MAAjB,UACE,uBAAMkC,SARU,SAACC,GACjBA,EAAEC,iBACFZ,EAASH,GACTC,EAAU,KAKmBtB,UAAY,cAAzC,UACE,uBAAOA,UAAY,aAAaqC,KAAK,OAAOC,MAASjB,EAAQkB,SAb5C,SAACJ,GACpBb,EAAUa,EAAE9B,OAAOiC,UAajB,wBAAQtC,UAAY,gBAAgBqC,KAAO,SAA3C,uBAEF,qBAAKrC,UAAW,UAAhB,SACGmB,EAAQL,KAAK,SAAAZ,GAAM,OAClB,cAAC,EAAD,CAEEP,MAASO,EAAOA,OAAOsC,MACvB5C,SAAYM,EAAOA,OAAON,SAC1BC,MAASK,EAAOA,OAAOL,MACvBC,YAAeI,EAAOA,OAAOJ,YAC7BC,UAAaG,EAAOA,OAAOuC,KALpBvC,EAAOA,OAAOwC,cChClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,wB","file":"static/js/main.df985fd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title, calories, image, ingredients, recipeURL}) =>{\r\n    return(\r\n        <div className = {style.recipe}>\r\n            <div className= {style.container}>\r\n                <a href = {recipeURL} target = \"_blank\"><h1>{title}</h1></a>\r\n                <div className = {style.card}>\r\n                    <div className = {style.info}>\r\n                        <div className = {style.front}>\r\n                            <img className = {style.image} src={image} alt = \"delicious plate of food\"/>\r\n                            <p>Calories: {Math.floor(calories)}</p>\r\n                        </div>\r\n                        <div className = {style.back}>\r\n                            <ol>\r\n                                {ingredients.map(ingredient =>(\r\n                                    <li>{ingredient.text}</li>\r\n                                ))}\r\n                            </ol>\r\n                            <a href = {recipeURL} target = \"_blank\">\r\n                                <p>Find the {title} recipe here</p>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () =>{\n//put these in environment variable later\n    const APP_ID = \"3a92d74c\";\n    const APP_KEY = \"1684b59c9ddc06d5bc247a1f60b47b7b\";\n\n    const [recipes, setRecipes] = useState([]);\n    const [search, setSearch]  = useState('');\n    const [query, setQuery] = useState('chicken')\n\n    const exampleRequest = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n    useEffect(() => {\n      getRecipes();\n    },[query]);\n\n    const getRecipes = async() =>{\n      const res = await fetch(exampleRequest);\n      const data = await res.json();\n      setRecipes(data.hits);\n    }\n\n    const updateSearch = (e) =>{\n      setSearch(e.target.value);\n    }\n\n    const getSearch = (e) =>{\n      e.preventDefault();\n      setQuery(search);\n      setSearch('');\n    }\n\n  return (\n    <div className = \"App\">\n      <form onSubmit = {getSearch} className = \"search-form\">\n        <input className = \"search-bar\" type=\"text\" value = {search} onChange = {updateSearch}/>\n        <button className = \"search-button\" type = \"submit\">search</button>\n      </form>\n      <div className= \"recipes\">\n        {recipes.map( recipe => (\n          <Recipe\n            key = {recipe.recipe.uri} \n            title = {recipe.recipe.label} \n            calories = {recipe.recipe.calories} \n            image = {recipe.recipe.image}\n            ingredients = {recipe.recipe.ingredients}\n            recipeURL = {recipe.recipe.url}>\n          </Recipe>\n            \n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1k124\",\"container\":\"recipe_container__2HKqo\",\"info\":\"recipe_info__3hJpD\",\"image\":\"recipe_image__Sx4PT\",\"card\":\"recipe_card__2MtcC\",\"front\":\"recipe_front__31WO9\",\"back\":\"recipe_back__2gUlp\"};"],"sourceRoot":""}